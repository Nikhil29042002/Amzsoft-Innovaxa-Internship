1. Create User-Defined Functions:

User-defined functions allow you to encapsulate a block of code that can be reused. Here's how to create and use functions in Python:


# Define a function
def greet(name):
    """This function greets the person passed in as a parameter."""
    print(f"Hello, {name}!")

# Call the function
greet("Alice")  # Output: Hello, Alice!
You can define functions with or without parameters and return values.

2. Explore Built-In Python Modules:

Python comes with a rich set of built-in modules that extend the functionality of the language. You can use them by importing them into your programs. For example, the math module:


import math

# Using functions from the math module
print(math.sqrt(16))  # Output: 4.0
print(math.pi)        # Output: 3.141592653589793
Explore Python's standard library to find modules for various purposes, such as os, datetime, random, and more.

3. Use External Modules from PyPI:

PyPI (Python Package Index) is a repository of third-party Python packages. You can install and use these packages in your Python programs. Here's how:

a. Install a Package:

Use pip, the Python package manager, to install packages from PyPI. For example, to install the requests library:

pip install requests
b. Import and Use the Package:

Once installed, you can import and use the package in your Python code:
import requests

# Make an HTTP GET request
response = requests.get("https://www.example.com")

# Print the response content
print(response.text)